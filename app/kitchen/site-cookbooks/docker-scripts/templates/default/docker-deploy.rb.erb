require 'open3'
require "#{__dir__}/docker_registry"
require 'optparse'

# Options
Options = Struct.new(
        :host,
        :port,
        :env,
        :pod,
        :dry_run
)

# Option Defaults
args = Options.new(
        "reg01.dev.vbx.ridesharemarket.com",
        5000,
        nil,
        nil,
        false
)

# Set commandline Options
OptionParser.new do |opts|
    opts.banner = "Usage: docker-deploy.rb [options]"

    opts.on("-nHOST", "--hostname=HOST", "Docker Private Registry hostname/IP address") do |h|
        args.host = h
    end

    opts.on("-pPORT", "--port=PORT", "Docker Private Registry port") do |p|
        args.port = p
    end

    opts.on("-eENV", "--env=ENV", "Node application environment") do |e|
        args.env = e
    end

    opts.on("-oPOD", "--pod=POD", "Docker container group name") do |pod|
        args.pod = pod
    end

    opts.on("-d", "--dry-run", "Execute Dry Run only, print commands only") do |d|
        args.dry_run = d
    end

    opts.on("-h", "--help", "Prints this help") do
        puts opts
        exit
    end

end.parse!

if args.env == nil
    fail "Missing required argument '--env'"
end

if args.pod == nil
    fail "Missing required argument '--pod'"
end

docker_registry_host = args.host
docker_registry_port = args.port
node_application_env = args.env
pod_name = args.pod
dry_run = args.dry_run

docker_registry = DockerRegistry.new({
                                             :registry_host => docker_registry_host,
                                             :registry_port => docker_registry_port
                                     })

rsm_logstash_forwarder_image = "rudijs/docker-logstash-forwarder"

pods = {
        "data" => [
                {
                        :name => "rsm-data",
                        :image => "#{docker_registry_host}:#{docker_registry_port}/ride-share-market/rsm-data:#{docker_registry.get_image_current_version("ride-share-market/rsm-data")}"
                }
        ],
        "app" => [
                {
                        :name => "rsm-api",
                        :image => "#{docker_registry_host}:#{docker_registry_port}/ride-share-market/rsm-api:#{docker_registry.get_image_current_version("ride-share-market/rsm-api")}"
                },
                {
                        :name => "rsm-app",
                        :image => "#{docker_registry_host}:#{docker_registry_port}/ride-share-market/rsm-app:#{docker_registry.get_image_current_version("ride-share-market/rsm-app")}"
                },
                {
                        :name => "rsm-nginx",
                        :image => "#{docker_registry_host}:#{docker_registry_port}/ride-share-market/rsm-nginx:#{docker_registry.get_image_current_version("ride-share-market/rsm-nginx")}"
                }
        ]
}

raise "Unkown Pod: #{pod_name}" if !pods[pod_name]

def run_command(dry_run, cmd)
    puts "==> #{cmd}"
    if !dry_run
        Open3.popen3(cmd) { |stdin, stdout, stderr, wait_thr|
            while line = stdout.gets
                puts line
            end
            exit_status = wait_thr.value
            unless exit_status.success?
                #abort "==> FAILED !!! #{cmd}"
                puts "==> FAILED !!! #{cmd}"
            end
        }
    end
end

# Pull
pods[pod_name].each do |item|
    run_command dry_run, "sudo docker pull #{item[:image]}"
end

# Destroy RSM Docker containers in specific order
pods[pod_name].reverse.each do |item|
    run_command dry_run, "sudo docker rm -f -v #{item[:name]}-logstash-forwarder"
    run_command dry_run, "sudo docker rm -f -v #{item[:name]}"
end

# Deploy
if pod_name == "data"
    rsm_data = pods["data"].find {|item| item[:name] == "rsm-data"}
    run_command dry_run, "sudo docker run -d --restart always --name rsm-data --env 'NODE_ENV=#{node_application_env}' --add-host lan.rmq01.prd.aws.ridesharemarket.com:<%= @rabbitmq_ip %> --add-host lan.mgo01.prd.aws.ridesharemarket.com:<%= @mongodb_ip %> --cap-add SYS_PTRACE --security-opt apparmor:unconfined #{rsm_data[:image]}"
    run_command dry_run, "sudo docker run -d --restart always --name rsm-data-logstash-forwarder --add-host logstash.ridesharemarket.com:<%= @logstash_ip %> -e FQDN=$(hostname --fqdn) -v /etc/pki/tls:/etc/pki/tls --volumes-from rsm-data -t rudijs/docker-logstash-forwarder '--quiet=true' '--config=/srv/ride-share-market-data/config/logstash-forwarder.json'"
end

if pod_name == "app"
    rsm_api = pods["app"].find {|item| item[:name] == "rsm-api"}
    run_command dry_run, "sudo docker run -d --restart always --name rsm-api --env 'NODE_ENV=#{node_application_env}' --add-host lan.rmq01.prd.aws.ridesharemarket.com:<%= @rabbitmq_ip %> --add-host metrics.ridesharemarket.com:<%= @metrics_ip %> --add-host couchbase.ridesharemarket.com:<%= @couchbase_ip %> --cap-add SYS_PTRACE --security-opt apparmor:unconfined #{rsm_api[:image]}"
    run_command dry_run, "sudo docker run -d --restart always --name rsm-api-logstash-forwarder --add-host logstash.ridesharemarket.com:<%= @logstash_ip %> -e FQDN=$(hostname --fqdn) -v /etc/pki/tls:/etc/pki/tls --volumes-from rsm-api -t rudijs/docker-logstash-forwarder '--quiet=true' '--config=/srv/ride-share-market-api/config/logstash-forwarder.json'"

    rsm_app = pods["app"].find {|item| item[:name] == "rsm-app"}
    run_command dry_run, "sudo docker run -d --restart always --name rsm-app --env 'NODE_ENV=#{node_application_env}' --cap-add SYS_PTRACE --security-opt apparmor:unconfined #{rsm_app[:image]}"
    run_command dry_run, "sudo docker run -d --restart always --name rsm-app-logstash-forwarder --add-host logstash.ridesharemarket.com:<%= @logstash_ip %> -e FQDN=$(hostname --fqdn) -v /etc/pki/tls:/etc/pki/tls --volumes-from rsm-app -t rudijs/docker-logstash-forwarder '--quiet=true' '--config=/srv/ride-share-market-app/config/logstash-forwarder.json'"

    rsm_nginx = pods["app"].find {|item| item[:name] == "rsm-nginx"}
    run_command dry_run, "sudo docker run -d --restart always --name rsm-nginx --volumes-from rsm-app --link rsm-app:rsm-app --link rsm-api:rsm-api -p 80:80 -p 443:443 #{rsm_nginx[:image]}"
    run_command dry_run, "sudo docker run -d --restart always --name rsm-nginx-logstash-forwarder --add-host logstash.ridesharemarket.com:<%= @logstash_ip %> -e FQDN=$(hostname --fqdn) -v /etc/pki/tls:/etc/pki/tls --volumes-from rsm-nginx -t rudijs/docker-logstash-forwarder '--quiet=true' '--config=/etc/nginx/logstash-forwarder.json'"
end