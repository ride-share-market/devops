version 6

# HOSTS
#======

REMOTE_TECH_HOSTS="<%= @hosts[:remoteTech].join(" ") %>"

VIRTUAL_BOX_HOSTS="<%= @virtual_box_hosts %>"

LAN_HOSTS="<%= @lan_hosts %>"

ADMIN_HOSTS="${REMOTE_TECH_HOSTS} ${VIRTUAL_BOX_HOSTS}"

CONSUL_ACCESS="${ADMIN_HOSTS} <%= @consul_hosts %>"

# INTERFACES
#===========

internet_interface="eth0+"

lan_interface="eth1"

docker_interface="docker+"

docker_virtual_subnets="veth+"

# CUSTOM SERVICES
#================

server_mosh_ports="udp/60000:61000"
client_mosh_ports="default 60000:61000"

server_kibana_ports="tcp/5601"
client_kibana_ports="default 5601"

#server_graphite_ports="tcp/8080"
#client_graphite_ports="default 8080"

server_grafana_ports="tcp/3000"
client_grafana_ports="default 3000"

server_rabbitmq_ports="tcp/15672"
client_rabbitmq_ports="default 15672"

server_jenkins_ports="tcp/8081"
client_jenkins_ports="default 8081"

# consul.io - Health checking, service discovery, key/value store
server_consul_ports="tcp/8300 udp/8300 tcp/8301 udp/8301 tcp/8302 udp/8302 tcp/8400 udp/8400 tcp/8500 udp/8500 tcp/8600 udp/8600"
client_consul_ports="default 8300 8301 8302 8400 8500 8600"

# BLACKLIST
#==========

# A space-separated list of IPs to be blocked.

BLACKLIST=""

# Block all traffic from and to certain IPs
if [ ! -z "${BLACKLIST}" ]; then
    blacklist full "${BLACKLIST}"
fi

# LOGGING
#========

FIREHOL_LOG_LEVEL="info"

FIREHOL_LOG_OPTIONS="--log-tcp-options --log-ip-options"

FIREHOL_LOG_PREFIX="firehol: "

# RULES
#======

interface4 "${lan_interface}" lan
    policy reject
    client all accept
    server all accept src "${LAN_HOSTS}"

interface4 "${docker_interface}" docker
    policy accept

interface4 "${docker_virtual_subnets}" veth
    policy accept

router4 dockerlan inface docker+ outface docker+
    policy accept

interface4 "${internet_interface}" internet <% if @virtual_box_hosts.nil? %>src not "${UNROUTABLE_IPS}" <% end %>

    policy drop

    protection strong

    client all accept

    server icmp accept

    group with src "${ADMIN_HOSTS}"
        server ssh accept
        server rabbitmq accept
        server kibana accept
        server jenkins accept
        #server graphite accept
        server grafana accept
    group end

    server ssh accept with knock SSH1
    server ssh accept with knock SSH2

    server mosh accept

    server consul accept src "${CONSUL_ACCESS}"
